# Create a new user
POST http://localhost:3336/api/auth/user HTTP/1.1
Content-Type: application/json

{
  "name": "Keks",
  "email": "user42@test.com",
  "city": "Москва",
  "birthDate": "1980-11-02",
  "password": "123456",
  "role": "Contractor"
}

###

# Get user by ID
GET http://localhost:3336/api/auth/user/63bd1d7c729d882f77e17f25 HTTP/1.1

###

# Login user by email and password
POST http://localhost:3336/api/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "user40@test.com",
  "password": "123456"
}

###

# Refresh auth token
POST http://localhost:3336/api/auth/refresh HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

###

# Update user data
PATCH http://localhost:3336/api/auth/user/63bd0a90f21de8ef1e51c551 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "name": "NotKeks",
  "description": "I liiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiike cats!",
  "skills": ["reading", "gaming","react", "gaming"]
}

###

# Change password
PUT http://localhost:3336/api/auth/user/63bd0a90f21de8ef1e51c551/password HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "oldPassword": "123456",
  "newPassword": "1234567"
}

###

# Upload avatar
POST http://localhost:3336/api/auth/avatar HTTP/1.1
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {token}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="avatar.jpg"
Content-Type: image/jpeg

< avatar.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# Create a new task
POST http://localhost:3336/api/tasks/task HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "title": "Task's title veeeeeeeeeeeeeery long",
  "description": "Task's description Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla ",
  "categoryId": 1,
  "price": 100,
  "dueDate": "2023-01-10",
  "city": "Санкт-Петербург",
  "tags": ["tag1", "TAG2", "tag2"]
}

###

# Update task data
PATCH http://localhost:3336/api/tasks/task/11 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "title": "Not Task's title veeeeeeeeeeeeeery long",
  "description": "Not Task's description Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla Bla ",
  "tags": ["tag1", "TAG2", "tag2"]
}

###

# Upload task image
POST http://localhost:3336/api/tasks/task/11/image HTTP/1.1
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {token}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="image"; filename="image.jpg"
Content-Type: image/jpeg

< avatar.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# Change task's status
PATCH http://localhost:3336/api/tasks/task/7/status HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "command": "done",
  "contractor": "63bd0a90f21de8ef1e51c551"
}

###

# Get task by ID
GET http://localhost:3336/api/tasks/task/11 HTTP/1.1

###

# Delete task by Id
DELETE http://localhost:3336/api/tasks/task/5 HTTP/1.1
Authorization: Bearer {token}

###

# Get new tasks
GET http://localhost:3336/api/tasks/new  HTTP/1.1
Authorization: Bearer {token}

###

# Get new tasks
GET http://localhost:3336/api/tasks/new?categories=2,1&limit=2&page=1&sort=popular  HTTP/1.1
Authorization: Bearer {token}

###

# Get personal tasks
GET http://localhost:3336/api/tasks/personal?statuses=new,done HTTP/1.1
Authorization: Bearer {token}

###

# Add comment to task
POST http://localhost:3336/api/tasks/task/7/comment HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "text": "Nice comment text!"
}

###

# Get task comments
GET http://localhost:3336/api/tasks/task/7/comment HTTP/1.1

###

# Get task comments with pagination
GET http://localhost:3336/api/tasks/task/7/comment?limit=1&page=1 HTTP/1.1

###

# Delete comment
DELETE http://localhost:3336/api/tasks/task/7/comment/3 HTTP/1.1
Authorization: Bearer {token}

###


# Create new category
POST http://localhost:3336/api/tasks/category HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "name": "reacting"
}

###

# Get all categories
GET http://localhost:3336/api/tasks/category HTTP/1.1

###

# Create new contractor's response
POST http://localhost:3336/api/tasks/task/7/response HTTP/1.1
Authorization: Bearer {token}

###

# Get all responses by task
GET http://localhost:3336/api/tasks/task/7/response HTTP/1.1

###

# Add review to task
POST http://localhost:3336/api/tasks/task/7/review HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "text": "Nice doooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooone!",
  "contractor": "63bd0a90f21de8ef1e51c551",
  "rating": 5
}

###

# sends new tasks mail notifications to all subscribers
POST http://localhost:3336/api/notify HTTP/1.1

###
